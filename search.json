[{"title":"理解instanceof的背后原理","url":"/2020/10/13/理解instanceof的背后原理/","content":"**概念：**\ninstanceof的作用： 因为利用typeof判断，我们所得到的许多结果都是object，这个时候我们就可以用instanceof来判断\ninstanceof的MDN定义： 判断构建函数的prototype是否在对象的原型链上\n\n所以instanceof 的背后原理其实是是原型链，就是要判断b.prototype是否在a.__proto__上。\n首先，要使用instanceof，我们需要一个对象和一个函数，例如 a instanceof b，a必须为对象，b为函数。\n我们可以先用instanceof判断基本的js类型：\n\n``` javascript\nString instanceof String //false\nString instanceof Object //true   \nFunction instanceof Object //true\nObject instanceof Object //true obj.__proto__ = Object.prototype\n```\n实现一个instanceof\n``` javascript\nfunction instance_of(left,right){\n\tconst RP = right.prototype;\n\twhile(true){\n\t\tif(left === null){\n\t\t \treturn false;\n\t\t\t}\n\t\tif(left === RP){\n\t\t\treturn true;\n\t\t\t}\n\t\t\tleft = left.__proto__;\n\t\t}\n}\n```"},{"title":"认识原型与原型链","url":"/2020/10/13/认识原型与原型链/","content":"**1.概念**\n**prototype与_proto_**\n\n**原型（prototype）**： 每一个函数都有原型prototype，是函数独有的，这个属性是一个指针，指向一个对象，这个对象包含所有构造函数的实例共享的变量与方法\n\n_proto_是每一个对象都有的，它指向它的构造函数的原型，是隐性的\n\n**原型链**： 当我们在对象里查找一个值的时候，js在对象里没有找到的话，就会在对象的原型对象里寻找，如果还是没有找到的话，就会在原型对象的原型对象里寻找，这个过程被委托在原型链当中，原型链的尽头指向Null\n\n**2.认识与理解**\n针对判断原型的指向的题目，记得几个准则：\n一是  _proto_ 指向的是 它构造函数的原型对象，要判断好谁是它的构造函数\n二是 *prototype* 有constructor函数，指向的是自己\n三是js的原型链最终指向的是Object原型对象(Object.prototype)\n``` javascript\nfunction Foo() {}\nconsole.log(Foo.prototype == Foo.prototype)  // true  \nconsole.log(Foo.prototype.constructor == Foo) //true\nconsole.log(Foo.__proto__ == Function.prototype) //true\nconsole.log(Foo.prototype.__proto__ == Object.prototype) //true\n\n```\n\n**3.理解new关键字的过程**\n\n使用new关键字调用函数(new ClassA(...))的具体过程\n1. 创建一个空对象, Var obj={};\n2. 设置新对象的constructor属性为构造函数的名称，将新对象的proto指向构造函数的prototype\nObj.__proto__==ClassA.prototype\n3. 使用新对象调用构造函数，将构造函数中this指向新实例对象，ClassA.call(obj)\n4. 将初始化完毕的新对象地址，保存到等号左边的变量中。\n5. 若构造函数中返回this或返回值是基本类型(number,string,bool,null,undefined)或者无返回值，则返回新的实例对象，若是引用类型的值，则返回这个引用类型。\n\n实例伪代码过程\n\n``` javascript\nnew Person(\"John\") = {\n  var obj = {};\n\tobj.__proto__ = Person.prototype;\n\t// 此时便建立了obj对象的原型链：\n\t// obj->Person.prototype->Object.prototype->null\n\tvar result = Person.call(obj,\"John\"); // 相当于obj.Person(\"John\")\n\t// 如果无返回值或者返回一个非对象值，则将obj返回作为新对象：\n\treturn typeof result === 'object' ? result || obj : obj;\n}\n```\n\n"},{"title":"笔试题1","url":"/2020/10/13/笔试题1/","content":"\n``` javascript\n//笔试题 leecode\n//寻找数组所能组成的最大值\n//原理是 利用冒泡排序，比较两个数的时候，\n// 例如 1，10. 所能组成的情况有 110 101，所以1在10前面。\nfunction bubleSort(arr){\n    return arr.sort( (a,b) => (b+''+a) - (a+''+b)).join('').replace(/^0*/,'') || '0';\n\n}\n\nfunction bubleSort1(arr){\n    for(var i=0; i<arr.length-1; i++){\n        for(var j=0; j<arr.length-i-1;j++){\n            if(arr[j+1] + '' + arr[j] > arr[j]+''+arr[j+1]){\n                let temp =arr[j];\n                arr[j] = arr[j+1];\n                arr[j+1] = temp;\n                console.log(arr);\n            }\n        }\n    }\n    arr = arr.join('');\n    console.log(arr[0]);\n    if(arr[0] == '0'){\n        return '0';\n    }else{\n        return arr;\n    }\n}\n// leetcode 290\n// 词性匹配 AABB 对应 cat cat dog dog   True\n// AABC  CAT CAT CAT DOG   False\n// 思路： 找出false的情况\n// 利用map, 把pattern和str 一一对应比较。 遍历pattern， 比较pattern[i]和str[i]\n// 假如pattern[i]不在map里，那么false的情况有，str[i]在map的values里\n// 假如pattern[i]在map里， 那么false的情况有， str[i]不等于map[pattern[i]]的值， 其余情况为true\nvar wordPattern = function(pattern, s) {\n    pattern = pattern.split('');\n    s = s.split(' ');\n    if(pattern.length !== s.length){\n        return false;\n    }\n    var dir = {};\n    for(var i=0;i<pattern.length;i++){\n       if(!dir[pattern[i]]){\n           for(var j in dir){\n               if(dir[j] == s[i]){\n                   return false;\n               }\n           }\n           dir[pattern[i]] = s[i];\n       }else{\n           if(dir[pattern[i]] !== s[i]){\n               return false;\n           }\n       }\n    }\n    return true;\n};\n```"},{"title":"MVC和MVVM区别","url":"/2020/10/11/MVC和MVVM区别/","content":"![enter description here](https://fuzhou123.s3.us-east-2.amazonaws.com/MVC+%E4%B8%8E+MVP+%E4%B8%8E+MVVM+%E5%8C%BA%E5%88%AB.png)\n"},{"title":"思考","url":"/2020/04/08/思考/","content":"  人生来就是孤独的，寄希望于另一个人拯救自己是没有意义的，人最终还是孤独的。一个有趣的现象是人们希望别人了解自己，渴望被另一个人理解，很难做到百分之百的理解呀。在伊甸园里，醉生梦死，现实与梦境的差别啊。人是孤独的，并且不需要拯救，人的天性很难被改变，就看你与我想要的是什么。当痛苦与迷茫来到时，能拯救自己的只有自己。所以，关注自己，关注自己的生活是主要的，生活的首位是自己。讽刺的现实是，只有你改变好自己，在别人眼里，你才是闪光而有意义的。接受事实这件事很难，但是学不会这件事只能让自己沉浸在悲愤的氛围中，而这对于解决问题没有任何帮助，这就是现实。那么学不会，这也是现实。","tags":["思考"]},{"title":"日记 ","url":"/2020/03/13/日记-1/","content":"**你是大傻子**\n\n 1. 1\n 2. 2\n 3. 3\n "},{"title":"心情","url":"/2020/03/11/心情/","content":"三年以后的我们，会是在哪里？\n我对自己有足够的信心，我未来的路是我们两个人的路，好好努力和奋斗，生命的意义在于做自己想做的事，别的都不那么重要。我这一辈子，只想付出所有去爱一个人，不是因为寂寞孤单，不是因为所谓的爱情是生活的全部，只是我想知道这样做行不行，给她一个被人真正好好爱过的体验，无论结果如何，又有什么遗憾呢？\n我能改变自己，但是我要做我自己，我有我的生活，爱情，事业，我能把这三者处理好，好好做自己想做的事。","tags":["未来"]},{"title":"打卡","url":"/2020/03/05/打卡/","content":"打卡打卡\nJS正则表达完成","tags":["打卡"]},{"title":"es6学习","url":"/2020/03/04/es6学习/","content":"\n## 打卡\n\n## ES6特性学习：\n\n - let作用于当前作用域\n - const声明不变的常量\n - ...arr 的写法\n - promise的用法：promise(reslove,reject) promise.then promise.catch\n - import 与 export，export default\n - 箭头函数 （）=》{}\n - 新的obj声明： { a, b} = obj \n - class obj{ construct some()}  get set","tags":["前端"]},{"title":"3.3","url":"/2020/03/03/3-3/","content":"打卡打卡\njs基础部分完成\n\n3.3\n","tags":["打卡"]},{"title":"比想象的更早","url":"/2020/03/02/比想象的更早/","content":"\n## 打卡打卡\n\n专业技能进度：81%\n\n## 小小的惊喜  2.24-3.2","tags":["成长"]},{"title":"日记","url":"/2020/03/01/日记/","content":"每日一记： 任务完成\n学习任务无法完成，明日补上\n","tags":["成长"]},{"title":"读书笔记","url":"/2020/02/29/读书笔记/","content":"\n## **《穷爸爸与富爸爸》**\n\n - 要想变得富裕，必须购进资产，而不是购进负债。\n - 房产，车子是负债，因为它们带来人们更多的金钱支出\n - 资产是把能把钱放入腰包的事物\n - 时代在不断变化，要控制风险，高成本的投入并不代表高风险\n - 大多数人陷入了骡子的困境，追求高工资并不是实现财务自由的方式，养成学习财务知识的习惯\n \n\n## 每日任务完成（集中集中）","tags":["成长"]},{"title":"做好眼前的事","url":"/2020/02/28/做好眼前的事/","content":"\n## 日常任务：\n\n - 专业技能：复习Javascript,完成freecodecamp基础练习41%\n - 英语：练习听力15分钟，看完英语电影《骡子》\n - 研究感兴趣领域，体能达成\n\n## 记录：\n\n - 专注于眼前的事情，把现在能做的做到最好\n - 自私是挺难克服的，那种想占有的心情，不想失去的心情随时会汹涌而来\n - 《骡子》的观后感：本片讲述了一个战后老兵高龄迫于生计和家庭不得已去帮贩毒集团运毒的故事，本片的价值观主要是在家庭和事业的抉择中，家庭首先是要摆在第一位的，本片主角在90岁高龄完成这次觉醒，总体值得一看。\n\n","tags":["成长"]},{"title":"新的开始","url":"/2020/02/27/新的开始/","content":"\n## **认识**\n\n当自己以为自己变了的时候，这几天的心情像一个大锤将我打回原形。人类的自私是天性，我喜欢她，我口口声声地说我在践行我的爱情观，我会无条件地对她真正的好。当这几天自私，占有，控制，害怕失去的负面情绪将我淹没的时候，我发现我原来还是一个自私的人。我之前认识到了人性的自私，但是我没有想去改，或者说我有想过，什么样是不自私，真正的对别人好，到头来我还是没有想清楚。所以，在这几天，彻彻底底地被打回了原形，我就是被自私控制占有的人。我不能接受我失去她，我被局限了，我的视野和我的人生都被局限了。我现在要时时刻刻反省自己了，我以为我调整好了状态，原来我这段时间一直是沉寂倒退的。我被自己的心里防御机制困住了，我回避用尖利刻薄但又现实的话形容我自己了。我想清楚了很多事，但是我自己不自觉地还是犯这些错误。\n\n## **谨记：**\n\n - 爱情只是人生活的一小部分，好的爱情你不觉得痛苦，只有自己才会给自己带来痛苦，人不该被局限在这窄窄的领域，原本有更宽阔的世界等着我，我应该更注重自我如何成长\n - 要时时刻刻地反省自己,我被我的视野局限了\n - 学会真正的为别人好，我觉得我现在更清楚什么是真正的为别人好，那么我是不会痛苦的，我现在痛苦的原因就是自私\n - 好好再想清楚自己，将来，对待朋友，对待家人，对待事业的态度\n - ==保持谦卑之心==\n\n## **日常任务：（今天工作）**\n\n锻炼完成，英语完成","tags":["成长"]},{"title":"等待中的自我成长","url":"/2020/02/26/等待中的自我成长/","content":"\n**每日计划**\n\n - 学习专业课知识2小时\n - 学习感兴趣的知识1小时\n - 锻炼体能\n - 学习英语15-30分钟\n\n 要让别人看到新的自己呀嘻嘻\n**2020年**\n 2月25日 目标达成\n 2月26日 目标达成\n","tags":["成长"]}]